# attach to tmux in every new window
set-option -g default-command "reattach-to-user-namespace -l zsh"

# powerline
# run-shell 'powerline-daemon -q'
# source /usr/local/lib/python3.9/site-packages/powerline/bindings/tmux/powerline.conf
# source-file "${HOME}/.tmux-themepack/powerline/block/cyan.tmuxtheme"

# act like vim
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

set -g prefix2 C-s

# increase scrollback lines
set -g history-limit 10000

# reload config file
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# tmux display things in 256 colors
set -g default-terminal "screen-256color"

# Make vim responsive to ESC
set -sg escape-time 0

# Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind -T copy-mode-vi Space
bind y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '
bind C-y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '

# automatically renumber tmux windows
set -g renumber-windows on

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n 'C-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Mor intuitive keybindings for splitting
bind-key - split-window -v -c "#{pane_current_path}"
bind-key \\ split-window -h -c '#{pane_current_path}'
bind c new-window -c "#{pane_current_path}"

# Unbind pane switching from thoughtbot/dotfiles
unbind h
unbind j
unbind k
unbind l

# Restore default prefix-l to switch to last window
bind-key l last-window

# Bind resizing of panes to {Shift,Ctrl}-{Left,Right,Up,Down}
# Shift resizes in smaller increments, Ctrl in larger increments
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Setup "v" and "V" to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

# Additional binding for copy mode
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi Enter send-keys -X cancel

# List of plugins
set -g @plugin 'tmux-plugins/tpm' # Tmux package manager
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'jimeh/tmux-themepack'
set -g @themepack 'powerline/block/cyan'

run-shell '~/.tmux/plugins/tpm/tpm'
